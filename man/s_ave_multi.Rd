% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smoothing_functions.R
\name{s_ave_multi}
\alias{s_ave_multi}
\title{Gaussian smooth multiple statistics}
\usage{
s_ave_multi(x, parms, sigma, ws = NULL, nk = TRUE, levs = c("group",
  "pop"))
}
\arguments{
\item{x}{Input SNP data frame.}

\item{parms}{Character vector. Names of the statistics to smooth.}

\item{sigma}{Numeric value. Smoothing statistic/window size, in kb.}

\item{ws}{Numeric value or NULL, default NULL. Window slide length. If NULL, uses every SNP as a window center.}

\item{nk}{Boolean, default TRUE. Should statistic contribution to window mean be additionally scaled by column "nk"?}

\item{levs}{Character vector or NA, default c('group', 'pop')). Names of the columns to split the data by for smoothing.}
}
\value{
If fixed_window == FALSE, returns the input data frame with an additional column containing smoothed average. Otherwise, returns a new data frame containing the position info for each window and smoothed value of the statistic at that window. Both outputs will also contain a column with the number of SNPs in each window.
}
\description{
\code{sm_ave_multi} Calculates gaussian smoothed average values for statistics and the genomic position at which it was observed, splitting by any requested variables.
}
\details{
Description of x:
   Requires columns titled columns titled "position", columns titled to match those in the "parms" argument, and those to match the "levs" argument if set. These contain positions in bp, the statistic to be smoothed for each SNP, and any variables to split the smoothing by (such as chromosome and population). If nk is TRUE, a column titled "nk" or "n_total" is required containing the weighting factor for smoothing, typically the number of observed alleles/sample size, "nk".
}
\examples{
#data prep:
t2 <- calc_pi(stickFORMATs$ac)
t2 <- cbind(stickFORMATs$ac, pi = t2)
t3 <- calc_Ho(stickFORMATs$character, 3, pop = l)
t3 <- reshape2::melt(t3, id.vars = c("snp", "position", "group"))
t2$ho <- t3$value



#fixed slide window, splitting by pop and group, the defualt:
s_ave_multi(t2, c("pi", "ho"), 200, 150, TRUE)

#splitting by only pop.
s_ave_multi(t2, c("pi", "ho"), 200, 150, TRUE, "pop")

#no splitting
s_ave_multi(t2, c("pi", "ho"), 200, 150, TRUE, NA)

}
